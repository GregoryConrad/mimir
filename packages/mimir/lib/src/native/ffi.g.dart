// This file is automatically generated by ffigen.dart; DO NOT MANUALLY EDIT!

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// # Safety
/// Caller must ensure provided ptr and len point to a valid memory buffer.
@ffi.Native<RustBuffer Function(ffi.Pointer<ffi.Uint8>, ffi.UintPtr)>()
external RustBuffer embedded_milli_process_instance_request(
  ffi.Pointer<ffi.Uint8> ptr,
  int len,
);

@ffi.Native<ffi.Void Function(RustBuffer)>()
external void embedded_milli_free_buffer(
  RustBuffer buffer,
);

/// Buffer going back to Dart
/// NOTE: must be freed with [embedded_milli_free_buffer] on the Dart side!
final class RustBuffer extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.UintPtr()
  external int len;

  @ffi.UintPtr()
  external int capacity;
}
